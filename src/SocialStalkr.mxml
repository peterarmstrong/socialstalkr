<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
  layout="vertical"
  backgroundGradientColors="[#CCCCCC, #FFFFFF]"
  paddingBottom="5" paddingTop="5"
  paddingLeft="5" paddingRight="5"
  creationComplete="onCreationComplete()"
  xmlns:components="com.socialstalkr.components.*">
<mx:Script><![CDATA[
  import mx.controls.List;
  import mx.events.ListEvent;
  import mx.events.ResizeEvent;
  import mx.rpc.events.ResultEvent;
  import mx.collections.ArrayCollection;

  import com.yahoo.maps.api.MapTypes;
  import com.yahoo.maps.api.YahooMapEvent;
  import com.yahoo.maps.api.YahooMap;
  import com.yahoo.maps.api.markers.Marker;
  import com.yahoo.maps.api.core.location.Address;
  import com.yahoo.maps.api.core.location.LatLon;
  import com.yahoo.maps.webservices.geocoder.GeocoderResult;
  import com.yahoo.maps.webservices.geocoder.events.GeocoderEvent;

  import com.socialstalkr.components.TwitterMarker;
  
  private static const BLURB:String =
    "This is the MIT-licensed code for the Hello! Flex 3" +
    " (http://manning.com) book example." +
    " Code copyright (c) 2008 Dima Berastau and Peter" +
    " Armstrong.";

  //Get your own appid from the Yahoo! Developer Network:
  //http://developer.yahoo.com/wsregapp/
  private static const YAHOO_APP_ID:String =
    "TWLRFYTV34GhMOfRCZubCe_LcKgnCKtK06BYJy3WNYSg0d.MaEk1483y4_OpzxjlJEk-";//Peter's
    //"nHgB9PHV34FHNVE9kQAmzvIk_UIAZoWsv2Iqi77IzWJd5FHXee1yQWCrGnnimDuI4RzcQQ--";//Dima's

  [Bindable]
  private var _map:YahooMap;
  
  [Bindable]
  private var _yourTwitterUser:XML;
  
  [Bindable]
  private var _friends:ArrayCollection;
  
  [Bindable]
  private var _selectedUser:XMLList;  

  private function onCreationComplete():void {
    _map = new YahooMap();
    _map.addEventListener(
      YahooMapEvent.MAP_INITIALIZE, onMapInitialize);
    _map.init(YAHOO_APP_ID, mapContainer.width,
      mapContainer.height);
    _map.addPanControl();
    _map.addScaleBar();
    _map.addTypeWidget();
    _map.addZoomWidget();

    mapContainer.addEventListener(ResizeEvent.RESIZE,
      onMapResize);
    mapContainer.addChild(_map);
  }

/*  
  private function onUserTimeline(event:TwitterEvent):void {
    if (_you == null) {
      if (event.data.length > 0) {
        var mostRecentStatus:TwitterStatus = event.data[0];
        _you = TwitterUser(mostRecentStatus.user);
      } else {
        _you = new TwitterUser();//prevent NPE if no tweets
      }
      _selectedUser = _you;
    }
    var tweets:ArrayCollection = new ArrayCollection();
    for each (var status:TwitterStatus in event.data) {
      tweets.addItem(status);
    }
    _selectedUser.tweets = tweets;
    updateMarkersFromTweets();
  }

  private function onUserSelect(event:ListEvent):void {
    selectUser(List(event.currentTarget).selectedItem
      as TwitterUser);
  }
  
  private function selectUser(user:TwitterUser):void {
    _selectedUser = user;
    if (_selectedUser.tweets.length == 0) {
      _twitter.loadUserTimeline(_selectedUser.screenName);
    } else {
      updateMarkersFromTweets();
    }
  }
*/  
  private function onUserSelect(event:ListEvent):void {
  }
  private function selectUser(user:XML):void {
  }

  private function updateMarkersFromTweets():void {
    _map.markerManager.removeAllMarkers();
    /*
    for each (var status:TwitterStatus in _selectedUser.tweets) {
      var text:String = status.text;
      var points:Array = text.match(/@{(.*)}/);
      var profileImageUrl:String = status.user.profileImageUrl;
      var name:String = status.user.name;
      var location:String = status.user.location;

      if (points != null && points.length > 0) {
        status.text = text.replace(points[0], points[1]);
        var address:Address = new Address(points[1]);
        var marker:Marker = new TwitterMarker(
          profileImageUrl, text.replace(points[0], points[1]));
        marker.address = address;
        _map.markerManager.addMarker(marker);
        
        //TODO - this is wasteful (only want to do for one)
        geocodeAddress(address);
      }
    }
    */
  }
  
  private function onMapResize(event:ResizeEvent):void {
    _map.setSize(mapContainer.width, mapContainer.height);
  }

  private function onMapInitialize(event:YahooMapEvent):void {
    //_map.mapType = MapTypes.HYBRID;
    _map.zoomLevel = 3;
    var address:Address =
      new Address("21 Water Street, Vancouver, BC");
      //yes, it would be nice to use IP address, but can't do that client-side
    geocodeAddress(address);
  }
  
  private function loadTwitterUser():void {
    _map.markerManager.removeAllMarkers();
    loadUserTimeline(twitterName.text);
    loadFriends(twitterName.text);
  }
  
  private function loadUserTimeline(userName:String):void {
    twitterUserTimelineSvc.url = "http://twitter.com/statuses/user_timeline/" + userName + ".xml";
    twitterUserTimelineSvc.send();
  }

  private function loadFriends(userName:String):void {
    twitterFriendsSvc.url = "http://twitter.com/statuses/friends/" + userName + ".xml";
    twitterFriendsSvc.send();
  }


  
  private function geocodeAddress(address:Address):void {
    address.addEventListener(
      GeocoderEvent.GEOCODER_SUCCESS, onGeocoderSuccess);
    address.geocode();
  }
  
  private function onGeocoderSuccess(event:GeocoderEvent):void {
    var result:GeocoderResult =
      event.data.firstResult as GeocoderResult;
    _map.centerLatLon = result.latlon;
  }
  
  private function formatTweet(item:Object):String {
    /*
    var status:TwitterStatus = TwitterStatus(item);
    return status.text + " at " +
      dateFormatter.format(status.createdAt);
    */
    return "";
  }

  private function handleTwitterUserTimelineSvcResult(event:ResultEvent):void { 
    var resultXML:XML = XML(event.result);
    trace("handleTwitterUserTimelineSvcResult:\n" + resultXML.toString()); 
    var xmlList:XMLList = resultXML.children(); 
    _selectedUser = xmlList[0].user;
    trace("  _selectedUser " + _selectedUser); 
  }

  private function handleTwitterFriendsSvcResult(event:ResultEvent):void { 
    var resultXML:XML = XML(event.result); 
    trace("handleTwitterFriendsSvcResult:\n" + resultXML.toString()); 
  }

]]></mx:Script>


  <mx:HTTPService id="twitterUserTimelineSvc"
    resultFormat="e4x"
    result="handleTwitterUserTimelineSvcResult(event)"/>
  <mx:XMLListCollection id="twitterUserTimelineXLC" 
    source="{XMLList(twitterUserTimelineSvc.lastResult.children())}"/>
    
  <mx:HTTPService id="twitterFriendsSvc"
    resultFormat="e4x"
    result="handleTwitterFriendsSvcResult(event)"/>
  <mx:XMLListCollection id="twitterFriendsXLC" 
    source="{XMLList(twitterFriendsSvc.lastResult.children())}"/>

  <mx:DateFormatter id="dateFormatter"
    formatString="L:NN A on EEEE, MMM. D"/>
  <mx:ApplicationControlBar width="100%">
    <mx:Label text="Twitter Name:"/>
    <mx:TextInput id="twitterName" width="300"
      text="peterarmstrong"
      enter="loadTwitterUser()"/>
    <mx:Button label="Load" click="loadTwitterUser()"/>
  </mx:ApplicationControlBar>
  <mx:HBox width="100%" height="100%">
    <mx:Panel title="Locations" width="100%" height="100%">
      <!-- this is the map container, the YahooMap component extends Sprite, so you must add it to a UIComponent. -->
      <mx:UIComponent id="mapContainer" width="100%"
        height="100%"/>
    </mx:Panel> 
    <mx:VBox width="300" height="100%">
      <mx:Panel width="100%" title="You">
        <components:TwitterUserBox data="{_yourTwitterUser}"
          click="selectUser(_yourTwitterUser)"/>
      </mx:Panel>
      <mx:Panel width="100%" height="50%" title="Friends">
        <mx:List id="usersList" width="100%" height="100%"
          backgroundAlpha="0" borderStyle="none"
          wordWrap="true"
          paddingTop="0" paddingBottom="0"
          paddingLeft="0" paddingRight="0"
          dataProvider="{_friends}"
          itemRenderer="com.socialstalkr.components.TwitterUserBox"
          change="onUserSelect(event)"/>
      </mx:Panel>
      <mx:Panel visible="{_selectedUser != null}"
        width="100%" height="50%"
        title="{_selectedUser.name}'s Tweets">
        <mx:List 
          id="tweetList"
          width="100%" height="100%"
          alternatingItemColors="[#EEEEEE, #FFFFFF]"
          borderStyle="none"
          paddingTop="0" paddingBottom="0"
          paddingLeft="0" paddingRight="0"
          labelFunction="formatTweet"
          dataProvider="{_selectedUser.tweets}"
          wordWrap="true"
          variableRowHeight="true"/>
      </mx:Panel>    
    </mx:VBox>
  </mx:HBox>
  <mx:HBox horizontalAlign="left">
    <mx:Image source="http://l.yimg.com/us.yimg.com/i/us/nt/bdg/websrv_120_1.gif"/>
    <mx:Label text="{BLURB}"/>
  </mx:HBox>
</mx:Application>