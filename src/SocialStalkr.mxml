<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
  layout="vertical"
  backgroundGradientColors="[#CCCCCC, #FFFFFF]"
  paddingBottom="5" paddingTop="5"
  paddingLeft="5" paddingRight="5"
  creationComplete="onCreationComplete()"
  xmlns:components="com.socialstalkr.components.*">
<mx:Script><![CDATA[
  import mx.controls.List;
  import mx.events.ListEvent;
  import mx.events.ResizeEvent;
  import mx.rpc.events.ResultEvent;
  import mx.collections.ArrayCollection;

  import com.yahoo.maps.api.MapTypes;
  import com.yahoo.maps.api.YahooMapEvent;
  import com.yahoo.maps.api.YahooMap;
  import com.yahoo.maps.api.markers.Marker;
  import com.yahoo.maps.api.core.location.Address;
  import com.yahoo.maps.api.core.location.LatLon;
  import com.yahoo.maps.webservices.geocoder.GeocoderResult;
  import com.yahoo.maps.webservices.geocoder.events.GeocoderEvent;

  import com.socialstalkr.components.TwitterMarker;
  
  private static const BLURB:String =
    "This is the MIT-licensed code for the Hello! Flex 3" +
    " (http://manning.com) book example." +
    " Code copyright (c) 2008 Peter Armstrong and" +
    " Dima Berastau.";

  //Get your own appid from the Yahoo! Developer Network:
  //http://developer.yahoo.com/wsregapp/
  private static const YAHOO_APP_ID:String =
"TWLRFYTV34GhMOfRCZubCe_LcKgnCKtK06BYJy3WNYSg0d.MaEk1483y4_OpzxjlJEk-";//Peter's
//"nHgB9PHV34FHNVE9kQAmzvIk_UIAZoWsv2Iqi77IzWJd5FHXee1yQWCrGnnimDuI4RzcQQ--";//Dima's

  [Bindable]
  private var _map:YahooMap;
  
  [Bindable]
  private var _twitterUser:XML;

  [Bindable]
  private var _twitterUserTweets:XMLList;
  
  [Bindable]
  private var _selectedFriend:XML;  

  [Bindable]
  private var _selectedFriendTweets:XMLList;

  private function onCreationComplete():void {
    _map = new YahooMap();
    _map.addEventListener(
      YahooMapEvent.MAP_INITIALIZE, onMapInitialize);
    _map.init(YAHOO_APP_ID, mapContainer.width,
      mapContainer.height);
    _map.addPanControl();
    _map.addScaleBar();
    _map.addTypeWidget();
    _map.addZoomWidget();

    mapContainer.addEventListener(ResizeEvent.RESIZE,
      onMapResize);
    mapContainer.addChild(_map);
  }
  
  private function locateTweet(tweet:XML):void {
    _map.markerManager.removeAllMarkers();

    trace("locateTweet: " + tweet);

    var text:String = tweet.text;
    var points:Array = text.match(/@{(.*)}/);
    var profileImageUrl:String = tweet.user.profile_image_url;
    var name:String = tweet.user.name;
    var location:String = tweet.user.location;
  
    if (points != null && points.length > 0) {
      var address:Address = new Address(points[1]);
      var marker:Marker = new TwitterMarker(
        profileImageUrl, text.replace(points[0], points[1]));
      marker.address = address;
      _map.markerManager.addMarker(marker);
      geocodeAddress(address);
    }
  }
  
  private function onMapResize(event:ResizeEvent):void {
    _map.setSize(mapContainer.width, mapContainer.height);
  }

  private function onMapInitialize(event:YahooMapEvent):void {
    //_map.mapType = MapTypes.HYBRID;
    _map.zoomLevel = 3;
    var address:Address =
      new Address("21 Water Street, Vancouver, BC");
      //yes, it would be nice to use IP, but can't client-side
    geocodeAddress(address);
  }
  
  private function loadTwitterUser():void {
    _map.markerManager.removeAllMarkers();
    loadUserTimeline(twitterName.text);
    loadFriends(twitterName.text);
  }
  
  private function loadUserTimeline(userName:String):void {
    twitterUserTimelineSvc.url =
      "http://twitter.com/statuses/user_timeline/" + userName + 
      ".xml";
    twitterUserTimelineSvc.send();
  }

  private function loadFriendTimeline(userName:String):void {
    twitterFriendTimelineSvc.url =
      "http://twitter.com/statuses/user_timeline/" + userName +
      ".xml";
    twitterFriendTimelineSvc.send();
  }

  private function loadFriends(userName:String):void {
    twitterFriendsSvc.url =
     "http://twitter.com/statuses/friends/" + userName + ".xml";
    twitterFriendsSvc.send();
  }

  private function onUserSelect(event:ListEvent):void {
    _selectedFriend =
      XML(List(event.currentTarget).selectedItem);
    loadFriendTimeline(_selectedFriend.screen_name); 
  }
  
  private function geocodeAddress(address:Address):void {
    address.addEventListener(
      GeocoderEvent.GEOCODER_SUCCESS, onGeocoderSuccess);
    address.geocode();
  }
  
  private function onGeocoderSuccess(event:GeocoderEvent):void {
    var result:GeocoderResult =
      event.data.firstResult as GeocoderResult;
    _map.centerLatLon = result.latlon;
  }
  
  private function formatTweet(item:Object):String {
    var status:XML = XML(item);
    return status.text + " at " + dateFormatter.format(
      dateFromTwitterDate(status.created_at));
  }

  //This is based on the twitterscript API (the TwitterStatus
  //class's makeDate function). Dates come back like this
  //inside the <created_at> element:
  //Fri Jun 27 18:08:58 +0000 2008
  private function dateFromTwitterDate(twDate:String):Date {
    return new Date(
        twDate.substr(0,10) +
        " " + twDate.substr(twDate.length - 4, twDate.length) +
        " " + twDate.substr(11, 8));
  }

  private function handleTwitterUserTimelineSvcResult(
    event:ResultEvent):void { 
    var resultXML:XML = XML(event.result);
    _twitterUserTweets = resultXML.children(); 
    _twitterUser = XML(_twitterUserTweets[0].user);
  }

  private function handleTwitterFriendTimelineSvcResult(
    event:ResultEvent):void {
    var resultXML:XML = XML(event.result);
    _selectedFriendTweets = resultXML.children(); 
    _selectedFriend = XML(_selectedFriendTweets[0].user);
  }
]]></mx:Script>
  <mx:HTTPService id="twitterUserTimelineSvc"
    resultFormat="e4x"
    result="handleTwitterUserTimelineSvcResult(event)"/>

  <mx:HTTPService id="twitterFriendsSvc" resultFormat="e4x"/>
  <mx:XMLListCollection id="twitterFriendsXLC" 
   source="{XMLList(twitterFriendsSvc.lastResult.children())}"/>

  <mx:HTTPService id="twitterFriendTimelineSvc"
    resultFormat="e4x"
    result="handleTwitterFriendTimelineSvcResult(event)"/>

  <mx:DateFormatter id="dateFormatter"
    formatString="L:NN A on EEEE, MMM. D"/>
  <mx:ApplicationControlBar width="100%">
    <mx:Label text="Twitter Name:"/>
    <mx:TextInput id="twitterName" width="300"
      text="peterarmstrong"
      enter="loadTwitterUser()"/>
    <mx:Button label="Load" click="loadTwitterUser()"/>
  </mx:ApplicationControlBar>
  <mx:HBox width="100%" height="100%">
    <mx:Panel title="Locations" width="100%" height="100%">
      <mx:UIComponent id="mapContainer" width="100%"
        height="100%"/>
    </mx:Panel> 
    <mx:VBox width="300" height="100%">
      <mx:Panel width="100%"
      title="{_twitterUser.name} ({_twitterUser.screen_name})">
        <mx:Image width="48" height="48"
          source="{_twitterUser.profile_image_url}"/>
        <mx:List 
          id="selectedUserTweetList"
          width="100%" height="150"
          alternatingItemColors="[#EEEEEE, #FFFFFF]"
          borderStyle="none"
          paddingTop="0" paddingBottom="0"
          paddingLeft="0" paddingRight="0"
          labelFunction="formatTweet"
          dataProvider="{_twitterUserTweets}"
change="locateTweet(XML(selectedUserTweetList.selectedItem))"
          wordWrap="true"
          variableRowHeight="true"/>
      </mx:Panel>
      
      <mx:Panel width="100%" height="50%"
        title="{_twitterUser.name} is Following">
        <mx:List id="usersList" width="100%" height="100%"
          backgroundAlpha="0" borderStyle="none"
          wordWrap="true"
          paddingTop="0" paddingBottom="0"
          paddingLeft="0" paddingRight="0"
          dataProvider="{twitterFriendsXLC}"
          change="onUserSelect(event)">
          <mx:itemRenderer>
            <mx:Component>
              <mx:HBox>
                <mx:Script>
                  <![CDATA[
                    [Bindable]
                    private var _value:XML;
                    
                    [Bindable]
                    public override function set data(
                    value:Object):void {
                      _value = XML(value);
                    }
                    
                    public override function get data():Object {
                      return _value;
                    }
                  ]]>
                </mx:Script>
                <mx:Image width="48" height="48"
                  source="{_value.profile_image_url}"/>
                <mx:VBox>
                  <mx:Label text="{_value.name}"/>
                  <mx:Label fontStyle="italic"
                    text="({_value.screen_name})"/>
                </mx:VBox>
              </mx:HBox>
            </mx:Component> 
          </mx:itemRenderer>
        </mx:List>
      </mx:Panel>

      <mx:Panel visible="{_selectedFriend != null}"
        width="100%" height="50%"
        title="{_selectedFriend.name}'s Tweets">
        <mx:List 
          id="selectedFriendTweetList"
          width="100%" height="100%"
          alternatingItemColors="[#EEEEEE, #FFFFFF]"
          borderStyle="none"
          paddingTop="0" paddingBottom="0"
          paddingLeft="0" paddingRight="0"
          labelFunction="formatTweet"
          dataProvider="{_selectedFriendTweets}"
change="locateTweet(XML(selectedFriendTweetList.selectedItem))"
          wordWrap="true"
          variableRowHeight="true"/>
      </mx:Panel>    
    </mx:VBox>
  </mx:HBox>
  <mx:HBox horizontalAlign="left">
    <mx:Image
source="http://l.yimg.com/us.yimg.com/i/us/nt/bdg/websrv_120_1.gif"/>
    <mx:Label text="{BLURB}"/>
  </mx:HBox>
</mx:Application>